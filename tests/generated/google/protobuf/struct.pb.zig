// Code generated by protoc-gen-zig
///! package google.protobuf
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayListU = std.ArrayListUnmanaged;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

test {
    std.testing.refAllDeclsRecursive(@This());
}

pub const NullValue = enum(i32) {
    NULL_VALUE = 0,
    _,
};

pub const Struct = struct {
    fields: ArrayListU(Struct.FieldsEntry) = .{},

    pub const _desc_table = .{
        .fields = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const FieldsEntry = struct {
        key: ManagedString = .Empty,
        value: ?*const Value = null,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .AllocMessage = {} }),
        };

        pub const encode = protobuf.MessageMixins(@This()).encode;
        pub const decode = protobuf.MessageMixins(@This()).decode;
        pub const init = protobuf.MessageMixins(@This()).init;
        pub const deinit = protobuf.MessageMixins(@This()).deinit;
        pub const dupe = protobuf.MessageMixins(@This()).dupe;
        pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
        pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
        pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
        pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
    };

    pub const encode = protobuf.MessageMixins(@This()).encode;
    pub const decode = protobuf.MessageMixins(@This()).decode;
    pub const init = protobuf.MessageMixins(@This()).init;
    pub const deinit = protobuf.MessageMixins(@This()).deinit;
    pub const dupe = protobuf.MessageMixins(@This()).dupe;
    pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
    pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
    pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
    pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
};

pub const Value = struct {
    kind: ?union(enum) {
        null_value: NullValue,
        number_value: f64,
        string_value: ManagedString,
        bool_value: bool,
        struct_value: Struct,
        list_value: ListValue,
        pub const _union_desc = .{
            .null_value = fd(1, .{ .Varint = .Simple }),
            .number_value = fd(2, .{ .FixedInt = .I64 }),
            .string_value = fd(3, .String),
            .bool_value = fd(4, .{ .Varint = .Simple }),
            .struct_value = fd(5, .{ .SubMessage = {} }),
            .list_value = fd(6, .{ .SubMessage = {} }),
        };
    },

    pub const _desc_table = .{
        .kind = fd(null, .{ .OneOf = std.meta.Child(std.meta.FieldType(@This(), .kind)) }),
    };

    pub const encode = protobuf.MessageMixins(@This()).encode;
    pub const decode = protobuf.MessageMixins(@This()).decode;
    pub const init = protobuf.MessageMixins(@This()).init;
    pub const deinit = protobuf.MessageMixins(@This()).deinit;
    pub const dupe = protobuf.MessageMixins(@This()).dupe;
    pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
    pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
    pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
    pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
};

pub const ListValue = struct {
    values: ArrayListU(Value) = .{},

    pub const _desc_table = .{
        .values = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const encode = protobuf.MessageMixins(@This()).encode;
    pub const decode = protobuf.MessageMixins(@This()).decode;
    pub const init = protobuf.MessageMixins(@This()).init;
    pub const deinit = protobuf.MessageMixins(@This()).deinit;
    pub const dupe = protobuf.MessageMixins(@This()).dupe;
    pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
    pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
    pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
    pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
};
