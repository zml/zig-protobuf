///! package google.protobuf.compiler
///! Code generated by zig-protobuf fork !
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayListU = std.ArrayListUnmanaged;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

test {
    std.testing.refAllDeclsRecursive(@This());
}
/// import package google.protobuf
const google_protobuf_descriptor_proto = @import("../descriptor.pb.zig");

pub const Version = struct {
    major: ?i32 = null,
    minor: ?i32 = null,
    patch: ?i32 = null,
    suffix: ?ManagedString = null,

    pub const _desc_table = .{
        .major = fd(1, .{ .Varint = .Simple }),
        .minor = fd(2, .{ .Varint = .Simple }),
        .patch = fd(3, .{ .Varint = .Simple }),
        .suffix = fd(4, .String),
    };

    pub const encode = protobuf.MessageMixins(@This()).encode;
    pub const decode = protobuf.MessageMixins(@This()).decode;
    pub const init = protobuf.MessageMixins(@This()).init;
    pub const deinit = protobuf.MessageMixins(@This()).deinit;
    pub const dupe = protobuf.MessageMixins(@This()).dupe;
    pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
    pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
    pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
    pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
};

pub const CodeGeneratorRequest = struct {
    file_to_generate: ArrayListU(ManagedString) = .{},
    parameter: ?ManagedString = null,
    proto_file: ArrayListU(google_protobuf_descriptor_proto.FileDescriptorProto) = .{},
    compiler_version: ?Version = null,

    pub const _desc_table = .{
        .file_to_generate = fd(1, .{ .List = .String }),
        .parameter = fd(2, .String),
        .proto_file = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .compiler_version = fd(3, .{ .SubMessage = {} }),
    };

    pub const encode = protobuf.MessageMixins(@This()).encode;
    pub const decode = protobuf.MessageMixins(@This()).decode;
    pub const init = protobuf.MessageMixins(@This()).init;
    pub const deinit = protobuf.MessageMixins(@This()).deinit;
    pub const dupe = protobuf.MessageMixins(@This()).dupe;
    pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
    pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
    pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
    pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
};

pub const CodeGeneratorResponse = struct {
    @"error": ?ManagedString = null,
    supported_features: ?u64 = null,
    file: ArrayListU(CodeGeneratorResponse.File) = .{},

    pub const _desc_table = .{
        .@"error" = fd(1, .String),
        .supported_features = fd(2, .{ .Varint = .Simple }),
        .file = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const Feature = enum(i32) {
        FEATURE_NONE = 0,
        FEATURE_PROTO3_OPTIONAL = 1,
        _,
    };

    pub const File = struct {
        name: ?ManagedString = null,
        insertion_point: ?ManagedString = null,
        content: ?ManagedString = null,
        generated_code_info: ?google_protobuf_descriptor_proto.GeneratedCodeInfo = null,

        pub const _desc_table = .{
            .name = fd(1, .String),
            .insertion_point = fd(2, .String),
            .content = fd(15, .String),
            .generated_code_info = fd(16, .{ .SubMessage = {} }),
        };

        pub const encode = protobuf.MessageMixins(@This()).encode;
        pub const decode = protobuf.MessageMixins(@This()).decode;
        pub const init = protobuf.MessageMixins(@This()).init;
        pub const deinit = protobuf.MessageMixins(@This()).deinit;
        pub const dupe = protobuf.MessageMixins(@This()).dupe;
        pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
        pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
        pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
        pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
    };

    pub const encode = protobuf.MessageMixins(@This()).encode;
    pub const decode = protobuf.MessageMixins(@This()).decode;
    pub const init = protobuf.MessageMixins(@This()).init;
    pub const deinit = protobuf.MessageMixins(@This()).deinit;
    pub const dupe = protobuf.MessageMixins(@This()).dupe;
    pub const jsonStringify = protobuf.MessageMixins(@This()).jsonStringify;
    pub const json_decode = protobuf.MessageMixins(@This()).json_decode;
    pub const json_encode = protobuf.MessageMixins(@This()).json_encode;
    pub const jsonParse = protobuf.MessageMixins(@This()).jsonParse;
};
